/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package amc.group.pkg9;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.io.*;

public class StaffPaymentSummaryGUI extends javax.swing.JFrame {

    private String appointmentID;
    private DefaultTableModel summary;

    public StaffPaymentSummaryGUI(String appointmentID) {
    this.appointmentID = appointmentID;

    // FIX: initialize table model first
    summary = new DefaultTableModel();

    initComponents(); // drag-and-drop layout
    setLocationRelativeTo(null);
    initTable();
    loadPaymentSummary();
}

    // Initialize table model with headers
    private void initTable() {
        String[] headers = {"InvoiceID", "AppointmentID", "ConsultationFee", "MedicineCharges", "Total"};
        summary = new DefaultTableModel(headers, 0);
        jTable1.setModel(summary);
    }

    // Load payment info into table
private void loadPaymentSummary() {
    // Use absolute path you specified
    File file = new File("C:\\Users\\TAI KOK WAI\\Documents\\Java Project\\APU-Medical-Centre-AMC\\src\\amc\\group\\pkg9\\PrescriptionAmount.txt");
    
    if (!file.exists()) {
        JOptionPane.showMessageDialog(this, 
            "PrescriptionAmount.txt not found at:\n" + file.getAbsolutePath(),
            "File Not Found", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try (BufferedReader br = new BufferedReader(new FileReader(file))) {
        String line;
        boolean found = false;
        while ((line = br.readLine()) != null) {
            // Split using | as delimiter, with trimming
            String[] parts = line.split("\\s*\\|\\s*");
            if (parts.length >= 5 && parts[1].equals(appointmentID)) {
                summary.addRow(parts);
                found = true;
                break; // stop after first match
            }
        }

        if (!found) {
            JOptionPane.showMessageDialog(this, 
                "No payment info found for Appointment ID: " + appointmentID,
                "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, 
            "Error reading PrescriptionAmount.txt:\n" + e.getMessage(),
            "Read Error", JOptionPane.ERROR_MESSAGE);
    }
}



                                  

//import javax.swing.*;
//import javax.swing.table.DefaultTableModel;
//import java.awt.event.*;
//import java.io.*;
//import java.util.logging.*;
///**
// *
// * @author TAI KOK WAI
// */
//public class StaffPaymentMethodGUI extends javax.swing.JFrame {
//    private String appointmentID;
//
//    public StaffPaymentMethodGUI(String appointmentID) {
//        this.appointmentID = appointmentID;
//        initComponents();
//        setLocationRelativeTo(null); // center window
//        // You can use appointmentID to display relevant info
//    }
//
//    // initComponents() and other methods here...
//}
//     
//     private void loadPaymentSummary() {
//        try (BufferedReader br = new BufferedReader(new FileReader(prescriptionFile))) {
//            String line;
//            boolean found = false;
//            while ((line = br.readLine()) != null) {
//                String[] parts = line.split("\\s*\\|\\s*");
//                if (parts.length == 5 && parts[1].equals(appointmentID)) {
//                    summary.addRow(parts);
//                    found = true;
//                    break;
//                }
//            }
//            if (!found) {
//                JOptionPane.showMessageDialog(this, "No payment info found for Appointment ID: " + appointmentID);
//            }
//        } catch (IOException e) {
//            logger.log(Level.SEVERE, "Error reading prescription file", e);
//        }
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Payment Summary :");

        jTable1.setModel(summary);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        jButton1.setText("Pay");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jButton1)
                        .addGap(94, 94, 94)
                        .addComponent(jButton2)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        int confirm = JOptionPane.showConfirmDialog(
//            this,
//            "Confirm payment for Appointment ID: " + appointmentID + "?",
//            "Confirm Payment",
//            JOptionPane.YES_NO_OPTION
//        );
//        if (confirm == JOptionPane.YES_OPTION) {
//            PaymentMethodGUI paymentGUI = new PaymentMethodGUI(appointmentID, summary);
//            paymentGUI.setVisible(true);
//            this.dispose();
//        }

        int selectedRow = jTable1.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a row first!");
        return;
    }

    // ✅ Extract InvoiceID from column 0
    String invoiceID = jTable1.getValueAt(selectedRow, 0).toString().trim();

    int confirm = JOptionPane.showConfirmDialog(
        this,
        "Confirm payment for Invoice ID: " + invoiceID + "?",
        "Confirm Payment",
        JOptionPane.YES_NO_OPTION
    );

    if (confirm == JOptionPane.YES_OPTION) {
        // ✅ Pass invoiceID, not summary
        PaymentMethodGUI paymentGUI = new PaymentMethodGUI(invoiceID);
        paymentGUI.setVisible(true);
        this.dispose();
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        java.awt.EventQueue.invokeLater(() -> new StaffPaymentSummaryGUI("APT001").setVisible(true));

        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new StaffPaymentSummaryGUI().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
